name: App Deploy
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID  }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        
      - name: ACR build
        id: build-push-acr
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.AZURE_CLIENT_ID }}
          service_principal_password: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant: ${{ secrets.AZURE_TENANT_ID }}
          registry: ${{ secrets.AZURE_REGISTRY }}
          repository: ${{ secrets.AZURE_REPO }}
          image:  python_api
          branch: main
          tag: v1

      - name: 'Log into Azure using github secret AZURE_CREDENTIALS'
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true 
         
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: "./terraform"
 
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: "./terraform"
         
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: "./terraform"
 
      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: "./terraform"
          
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.AZURE_RESOURCE_GROUP }}' 
          cluster-name: '${{ secrets.AZURE_CLUSTER_NAME }}'
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             python-api.yaml
          images: '${{ secrets.AZURE_REGISTRY }}.azurecr.io/${{ secrets.AZURE_REPO }}/python_api:v1'
          pull-images: false
